# 가로 2 : 세로 3 = 선으로 잘리는 사각형 (2+3-1)개
# 가로 3 : 세로 4 = 선으로 잘리는 사각형 (3+4-1)개
# 선이 지나가는 사각형이 최대공약수 만큼 반복됨
# (8,12)의 최대공약수 4
def solution(w, h):
    x = gcd(w, h)
    return w * h - (w // x + h // x - 1) * x
    # 정상 정사각형 개수 = 전체 사각형의 크기 - (선이 지나간 사각형 개수)*최대공약수


# 최대 공약수 (유클리드 호제법)
# 호제법: 두 수가 서로 상대방 수를 나누어 원하는 수를 얻는 알고리즘
# 2개의 자연수(또는 정식) a, b에 대해서 a를 b로 나눈 나머지를 r이라 하면(단, a>b), a와 b의 최대공약수는 b와 r의 최대공약수와 같다.
# 이 원리를 반복하여 나머지가 0이 되었을때 나누는 수가 a,b의 최대 공약수
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a
